<?php

/**
 * @file
 * OS Activity module file.
 */
include_once 'os_activity.features.inc';

/**
 * Implements hook_node_insert().
 */
function os_activity_node_insert($node) {
  if (!og_is_group_content_type('node', $node->type)) {
    return;
  }
  os_activity_message_node_create($node, 'insert');
}

/**
 * Implements hook_node_update().
 */
function os_activity_node_update($node) {
  if (!og_is_group_content_type('node', $node->type)) {
    return;
  }
  os_activity_message_node_create($node, 'update');
}

/**
 * Helper function; Create a message when a node is created or updated.
 */
function os_activity_message_node_create($node, $op) {
  $node_wrapper = entity_metadata_wrapper('node', $node);

  $action = $op == 'insert' ? t('posted') : t('edited');
  $values = array(
    'uid' => $node->uid,
    'arguments' => array(
      '@action' => $action,
    ),
  );

  $message = message_create('os_node', $values);
  $wrapper = entity_metadata_wrapper('message', $message);
  $wrapper->field_node_reference->set($node);

  // Set reference to the group.
  $group_wrapper = og_is_group('node', $node) ? $node : $node_wrapper->{OG_AUDIENCE_FIELD}->get(0);
  $wrapper->field_group->set($group_wrapper->value());

  $is_private = (int) $group_wrapper->{OG_ACCESS_FIELD}->value();
  $wrapper->field_private_message->set($is_private);
  $wrapper->save();
}
